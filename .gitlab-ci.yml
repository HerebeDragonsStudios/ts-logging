.node_cache: &cache_node_modules
  key:
    files:
      - package-lock.json
  paths:
    - node_modules
  policy: pull

.test-cache: &test-cache
  key: test-$CI_JOB_IMAGE
  paths:
    - workdocs/coverage
  policy: pull-push

.build-cache: &build-cache
  key: build-$CI_JOB_IMAGE
  paths:
      - lib
      - dist
  policy: pull-push

default:
  image: node:16
  before_script:
    - |
      if [[ ! -f package.json ]]; then
        echo "No package.json found! A package.json file is required to publish a package to GitLab's NPM registry."
        echo 'For more information, see https://docs.gitlab.com/ee/user/packages/npm_registry/#creating-a-project'
        exit 1
      fi
    - NPM_PACKAGE_NAME=$(node -p "require('./package.json').name")
    - NPM_PACKAGE_VERSION=$(node -p "require('./package.json').version")
    - npm ci --cache .npm --prefer-offline

stages:
  - dependencies
  - test
  - build
  - deploy


install:
  stage: dependencies
  cache:
    <<: *cache_node_modules
    policy: pull-push
  script:
    - npm install


tests:
  stage: test
  needs: ["install"]
  script:
    - npm run coverage
  cache:
    <<: *cache_node_modules
    <<: *test-cache  
  artifacts:
    when: always
    reports:
      junit:
        - workdocs/coverage/junit-report.xml

npm-deploy:
  stage: deploy
  needs: ["install", "tests"]
  cache:
    <<: *cache_node_modules
  script:
    - echo "Attempting to publish package ${NPM_PACKAGE_NAME} version ${NPM_PACKAGE_VERSION} to GitLab's NPM registry."
    - echo "//${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${CI_JOB_TOKEN}" > .npmrc
    - npm publish
  only:
    - tags
  except:
    - branches

dsu-publish:
  stage: deploy
  needs: ["install", "tests"]
  cache:
    <<: *cache_node_modules
  script:
    - echo "This will be replaced by a call to a workspace to handle deploying to DSU"
  only:
    - tags
  except:
    - branches    

pages:
  stage: deploy
  needs: ["install"]
  cache:
    <<: *cache_node_modules
    <<: *test-cache  
  script:
    - npm run docs
    - mv docs public
  artifacts:
    paths:
      - public
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      changes:
        - workdocs/**/*
        - docs/**/*
    - if: '$CI_COMMIT_TAG'
