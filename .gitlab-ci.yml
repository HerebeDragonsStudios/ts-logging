variables:
  FF_USE_FASTZIP: 1
  CACHE_COMPRESSION_LEVEL: "fastest"
  ARTIFACT_COMPRESSION_LEVEL: "fast"
  CACHE_REQUEST_TIMEOUT: 5

default:
  image: node:16
  before_script:
    - |
      if [[ ! -f package.json ]]; then
        echo "No package.json found! A package.json file is required to publish a package to GitLab's NPM registry."
        echo 'For more information, see https://docs.gitlab.com/ee/user/packages/npm_registry/#creating-a-project'
        exit 1
      fi
    - NPM_PACKAGE_NAME=$(node -p "require('./package.json').name")
    - NPM_PACKAGE_VERSION=$(node -p "require('./package.json').version")
    - npm ci --cache .npm --prefer-offline

stages:
  - dependencies
  - build
  - test
  - deploy

install:
  stage: dependencies
  cache:
    - key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
      paths:
        - node_modules/
        - .npm/
      policy: push
  script:
    - npm ci --cache .npm --prefer-offline
  interruptible: true
  only:
    changes:
      - package-lock.json
  retry:
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure

tests:
  stage: test
  needs: ["build"]
  script:
    - npm run test:ci
  cache:
    - key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
      paths:
        - node_modules/
        - .npm/
      policy: pull
    - key: build-$CI_JOB_IMAGE
      paths:
        - lib/
        - dist/
      policy: pull
    - key: test-$CI_JOB_IMAGE
      paths:
        - workdocs/coverage/
      policy: push
  artifacts:
    when: always
    reports:
      junit:
        - workdocs/coverage/junit-report.xml
  coverage: '/^Statements.*?:.*?(\d+\.\d+)%/'
  interruptible: true

build:
  stage: build
  cache:
    - key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
      paths:
        - node_modules/
        - .npm/
      policy: pull
    - key: build-$CI_JOB_IMAGE
      paths:
        - lib/
        - dist/
      policy: push
  script:
    - npm run build:prod

npm-deploy:
  stage: deploy
  needs: ["tests", "build"]
  cache:
    - key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
      paths:
        - node_modules/
        - .npm/
      policy: pull
    - key: build-$CI_JOB_IMAGE
      paths:
        - lib/
        - dist/
      policy: pull
  script:
    - echo "Attempting to publish package ${NPM_PACKAGE_NAME} version ${NPM_PACKAGE_VERSION} to GitLab's NPM registry."
    - echo "//${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${CI_JOB_TOKEN}" > .npmrc
    - npm publish
  only:
    - tags
  except:
    - branches

pages:
  stage: deploy
  needs: ["tests"]
  cache:
    - key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
      paths:
        - node_modules/
        - .npm/
      policy: pull
    - key: build-$CI_JOB_IMAGE
      paths:
        - lib/
        - dist/
      policy: pull
    - key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
      paths:
        - node_modules/
        - .npm/
      policy: pull
  script:
    - npm run docs
    - mv docs public
  artifacts:
    paths:
      - public
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      changes:
        - workdocs/**/*
    - if: '$CI_COMMIT_TAG'
    - when: manual
  interruptible: true
  allow_failure: true