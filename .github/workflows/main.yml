name: herebedragons-studios/ts-logging
on:
  push:
    branches: [ master ]
    pull_request:

jobs:
  install:
    runs-on: ubuntu-latest
    container:
      image: node:18
    timeout-minutes: 60
    steps:
      - name: Checking out code
        uses: actions/checkout@v4.0.0
      - name: Caching Node Modules
        uses: actions/cache@v3.3.2
        with:
          path: |
            node_modules/
            .npm/
          key: dependencies-${{ github.ref }}-${{ hashFiles('**/package-lock.json') }}
      - name: Installing Dependencies
        run: npm ci --cache .npm --prefer-offline

  build:
    needs: install
    runs-on: ubuntu-latest
    container:
      image: node:18
    timeout-minutes: 60
    steps:
      - name: Checking out code
        uses: actions/checkout@v4
      - name: Restoring Node Modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules/
            .npm/
          key: dependencies-${{ github.ref }}-${{ hashFiles('**/package-lock.json') }}
      - name: Caching build code
        uses: actions/cache@v3
        with:
          path: |
            dist/
            lib/
          key: build-${{ github.ref }}-${{ hashFiles('**/src/**/*') }}
      - name: Building solution...
        run: npm run build:prod

  tests:
    needs: build
    runs-on: ubuntu-latest
    container:
      image: node:18
    timeout-minutes: 60
    steps:
      - name: Checking out code
        uses: actions/checkout@v4.0.0
      - name: Restoring Node Modules
        uses: actions/cache@v3.3.2
        with:
          path: |
            node_modules/
            .npm/
          key: dependencies-${{ github.ref }}-${{ hashFiles('**/package-lock.json') }}
      - name: Restoring built solution...
        uses: actions/cache@v3.3.2
        with:
          path: |
            dist/
            lib/
          key: build-${{ github.ref }}-${{ hashFiles('**/src/**/*') }}
      - name: Running tests % collecting coverage
        run: npm run coverage
      - name: Caching test results...
        uses: actions/cache@v3.3.2
        with:
          path: workdocs/coverage/
          key: test-${{ github.ref }}
      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: workdocs/coverage

  release:
    needs:
      - tests
      - build
    runs-on: ubuntu-latest
    container:
      image: node:18
    timeout-minutes: 60
    steps:
      - name: Checking out code
        uses: actions/checkout@4
        if: startsWith(github.ref, 'refs/tags')
      - name: Restoring Node Modules
        uses: actions/cache@v3
        if: startsWith(github.ref, 'refs/tags')
        with:
          path: |
            node_modules/
            .npm/
          key: dependencies-${{ github.ref }}
      - name: Restoring built solution...
        uses: actions/cache@v3
        if: startsWith(github.ref, 'refs/tags')
        with:
          path: |
            dist/
            lib/
          key: build-${{ github.ref }}
      - name: Create Change Log
        if: startsWith(github.ref, 'refs/tags')
        run: cp ./workdocs/release_notes.md ./Changelog.md
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags')
        uses: softprops/action-gh-release@v1
          with:
            files: |
              README.md
              LICENSE.md
              Changelog.md
              lib/*

  pages:
    needs: tests
    runs-on: ubuntu-latest
    container:
      image: node:18
    timeout-minutes: 60
    continue-on-error: true
    permissions:
      contents: read
      packages: write # allow GITHUB_TOKEN to push to branch
    steps:
      - name: Checking out code
        uses: actions/checkout@v4
      - name: Restoring Node Modules
        uses: actions/cache@v3.3.2
        with:
          path: |
            node_modules/
            .npm/
          key: dependencies-${{ github.ref }}
      - name: Restoring Test Results...
        uses: actions/cache@v3
        with:
          path: workdocs/coverage/
          key: test-${{ github.ref }}
      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          name: test-results
      - run: npm run docs
      - run: mv docs public
      - name: Uploading Documentation
        uses: actions/upload-artifact@v3
        if: success()
        with:
          name: test-results
          path: public
      - name: Install rsync
        run: |
          apt-get update && apt-get install -y rsync git
      - name: Deploying Documentation Website
        uses: JamesIves/github-pages-deploy-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions
        with:
          branch: gh-pages
          folder: public
